---
name: Manual Release
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        type: environment
      tag:
        description: Release Tag
        required: true

jobs:
  manual:
    name: Deploy to ${{github.event.inputs.environment}}
    outputs:
      release_sha:  ${{ steps.tag_id.outputs.release_sha }}
      release_id:   ${{ steps.tag_id.outputs.release_id }}
      release_name: ${{ steps.tag_id.outputs.release_name }}
      release_body: ${{ steps.tag_id.outputs.release_body }}

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Get Release Id from Tag
        id: tag_id
        uses: DFE-Digital/github-actions/DraftReleaseByTag@master
        with:
          TAG: ${{ github.event.inputs.tag }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if found
        if: steps.tag_id.outputs.release_id == ''
        run: |
             echo "::error ::Tag ${{ github.event.inputs.tag }} cannot be found in releases"
             exit 1

  deploy:
    needs: manual
    name: Trigger Deployment to ${{github.event.inputs.environment}}
    uses: DFE-Digital/get-into-teaching-app/.github/workflows/deploy.yml@workflow/improvements
    with:
       environment: ${{github.event.inputs.environment}}
       sha:         ${{needs.manual.outputs.release_sha}}
    secrets:
       AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
       KEY_VAULT:         ${{ secrets.KEY_VAULT }}
       ARM_ACCESS_KEY:    ${{ secrets.ARM_ACCESS_KEY}}

  inform:
    if:      success()
    runs-on: ubuntu-latest
    needs:   [manual , deploy]
    steps:

      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: DFE-Digital/github-actions/keyvault-yaml-secret@master
        id: SLACK-RELEASE-NOTE-WEBHOOK
        with:
          keyvault: ${{ secrets.KEY_VAULT}}
          yaml_secret: INFRA-KEYS
          secret: SLACK-RELEASE-NOTE-WEBHOOK

      - name: Slack Release Notification
        if: needs.manual.outputs.release_id && github.event.inputs.environment == 'Production'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_SUCCESS}}
          SLACK_TITLE: "Release Published to ${{github.event.inputs.environment}}: ${{needs.manual.outputs.release_name}}"
          SLACK_MESSAGE: ${{ fromJson( needs.manual.outputs.release_body) }}
          SLACK_WEBHOOK: ${{ steps.SLACK-RELEASE-NOTE-WEBHOOK.outputs.secret-value }}
          MSG_MINIMAL: true

  alert:
    if:      failure()
    runs-on: ubuntu-latest
    needs:   [manual , deploy]
    steps:

      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: DFE-Digital/github-actions/keyvault-yaml-secret@master
        id: SLACK-WEBHOOK
        with:
          keyvault: ${{ secrets.KEY_VAULT}}
          yaml_secret: INFRA-KEYS
          secret: SLACK-WEBHOOK

      - name: Slack Notification
        if: github.event.inputs.environment == 'Production'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_FAILURE}}
          SLACK_TITLE: "Manual Release Failed: ${{needs.manual.outputs.release_name}}"
          SLACK_MESSAGE: Failure deploying ${{github.event.inputs.environment}} release
          SLACK_WEBHOOK: ${{ steps.SLACK-WEBHOOK.outputs.secret-value }}
