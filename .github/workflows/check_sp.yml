name: Check Service Principal

on:
  workflow_dispatch:
  schedule:
    - cron: "35 6 * * *"
    
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.select-tests.outputs.tests }}
    steps:
      - name: Select Tests
        id: select-tests
        run: |
          d="{'environment' :'Development'  , 'principle': 's146d01-keyvault-readonlyaccess'}"
          t="{'environment' :'Test'         , 'principle': 's146t01-keyvault-readonlyaccess'}"
          p="{'environment' :'Production'   , 'principle': 's146p01-keyvault-readonlyaccess'}"
          tests="{ 'data':[ ${d} ,  ${t} ,  ${p} ]}"
          echo "::set-output name=tests::${tests}"  

  check_expires:
    name:      ${{matrix.data.environment}}/${{ matrix.data.principle }}
    needs:     set-matrix
    strategy:
       matrix: ${{ fromJson(needs.set-matrix.outputs.tests) }}
    environment:
         name: ${{ matrix.data.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Check ${{ steps.serviceprinciple.outputs.name }}
        uses: DFE-Digital/github-actions/CheckServicePrincipal@master
        id: pwsh_check_expire
        with:
            AzureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
            ServicePrincipal: ${{ matrix.data.principle }}
            ExpiresWithinDays: 30

      - name: Processing ${{fromJson(steps.pwsh_check_expire.outputs.json_data).data.Name}}
        run:  echo Expires in ${{fromJson(steps.pwsh_check_expire.outputs.json_data).data.ExpiresDays}} days

      - name: Check out the repo
        if:   fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application != 'Dummy'
        uses: actions/checkout@v2.4.0

      - name: set-up-environment
        if:   fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application != 'Dummy'
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        if:   fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application != 'Dummy'
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: DfE-Digital/keyvault-yaml-secret@v1
        if:   fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application != 'Dummy'
        id:  keyvault-yaml-secret
        with:
          keyvault: ${{ secrets.KEY_VAULT}}
          secret: INFRA-KEYS
          key: SLACK-WEBHOOK
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Slack Notification
        if:   fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application != 'Dummy'
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_COLOR: ${{env.SLACK_ERROR}}
           SLACK_TITLE: ${{ fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application }} ${{ fromJson(steps.pwsh_check_expire.outputs.json_data).data.Name }}  
           SLACK_MESSAGE: |
                         The Service Principle ${{ fromJson(steps.pwsh_check_expire.outputs.json_data).data.Application }} 
                         key ${{ fromJson(steps.pwsh_check_expire.outputs.json_data).data.Name }} is due to
                         expires in ${{fromJson(steps.pwsh_check_expire.outputs.json_data).data.ExpiresDays}} days
                         Please follow the process in https://dfe-technical-guidance.london.cloudapps.digital/how-to/security/managing-secrets/#access-key-expiration to renew.
           SLACK_WEBHOOK: ${{ steps.keyvault-yaml-secret.outputs.SLACK-WEBHOOK }}
