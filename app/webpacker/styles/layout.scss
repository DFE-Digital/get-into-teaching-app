%content-width-limiter-shared {
    max-width: 2000px;
    margin: auto;
}

body {
    font-family: $git-font-family;

    &.govuk-body {
        margin: 0;
        padding: 0;
    }
}

main, 
header {
    @extend %content-width-limiter-shared; 
}

.limit-content-width {
    @extend %content-width-limiter-shared; 
}

.no-hero {
    border-top: 1px solid $grey-light;
}

.container-1000 {
    min-height: 25px;
    max-width: 1000px;
    text-align: center;
    margin: 0 auto;

    @media only screen and (max-width: 800px) {
        box-sizing: border-box;
        padding-left: 20px;
        padding-right: 20px;
        .content & {
            padding-left: 0;
            padding-right: 0;
        }
    }
}

.visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.hidden {
    display: none;
}



// new layouts, intended to remove the reliance on float and instead use semantic markup and flexbox:

$content-max-width: 1000px;
$mobile-wrap: 800px;

main.semantic {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;

  max-width: $content-max-width;
  margin: 1em .8em 3em;

  @media only screen and (min-width: $mobile-wrap) {
    flex-direction: row-reverse;
    justify-content: flex-end;
    margin: 1em auto 4em;
  }

  > article {
    flex: 0 1 65%;
  }

  > aside {
    flex: 0 0 calc(30%);

    // note we're not using `gap: 1em` even though it works for flex in
    // Firefox/Chrome as Safari is lagging behind a bit. Instead knock a
    // bit off the basis and add some margin when wider than mobile
    @media only screen and (min-width: $mobile-wrap) {
      flex: 0 0 calc(30% - 1em);
      margin-left: 1em;
    }
  }

  // feature: content that's not a regular text document, like a list of items on an index
  // supplementary: content that's not directly related to the main article but might be of interest
  > .feature,
  > .supplementary {
    flex: 0 0 100%;
  }
}
