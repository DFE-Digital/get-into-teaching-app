@mixin reset {
  margin: 0;
  padding: 0;
}

@mixin suppress-external-link-icon {
  &[href*="//"] {
    &:after {
      content: none !important;
      margin-left: unset;
    }
  }
}

@mixin _external-link-icon-style {
  &[href*="//"] {
    &:after {
      content: url('../images/icon-external.svg') / "External link icon";
      margin-left: .2em;
      display: inline-block;
      background-repeat: no-repeat;
    }
  }
}

@mixin external-link-icon {
  a:not(.no-external-icon) {
    @include _external-link-icon-style;
  }

  a:not(.button--no-external-icon) {
    @include _external-link-icon-style;
  }
}

// these are typically headers or section headings, often
// placed over images or other sections
@mixin rotated-block($degrees: -3deg, $blur: 4px) {
  transform: rotate($degrees);
  backdrop-filter: blur($blur);
}

@mixin chevron-icon($color, $dimensions, $rotate: 45deg) {
  content: "";
  display: inline-block;
  position: relative;
  width: $dimensions;
  height: $dimensions;
  border: 4px solid $color;
  border-width: 3px 3px 0 0;
  transform: rotate($rotate);
}

$chevron-direction-map: (
  'right': 45deg,
  'left': 225deg,
  'up': 315deg,
  'down': 135deg
);

@mixin chevron($color: $white, $after: true, $direction: right, $dimensions: .6em, $focus-color: $black) {
  $chevron-margin: .1em;

  $degrees: map-get($chevron-direction-map, $direction);

  > span {
    word-break: break-word;

    // after governs whether the chevron is placed after (on the right) or
    // before (on the left) of the link text
    @if $after {
      &:after {
        @include chevron-icon($color: $color, $dimensions: $dimensions, $rotate: $degrees);

        margin-left: $chevron-margin;
      }
    } @else {
      &:before {
        @include chevron-icon($color: $color, $dimensions: $dimensions, $rotate: $degrees);

        margin-right: $chevron-margin;
      }
    }
  }

  &:focus > * {
    &:after,
    &:before {
      border-color: $focus-color;
    }
  }
}

/* stylelint-disable */
.hide-on-desktop {
  @include mq($from: tablet) {
    display: none !important;
  }
}

.hide-on-tablet {
  @include mq($until: tablet) {
    display: none !important;
  }
}

.hide-on-mobile {
  @include mq($until: mobile) {
    display: none !important;
  }
}
/* stylelint-enable */

// Mixins for targetting specific legacy/quirky/inferior browsers

@mixin safari-only {
  // Hack for Safari: Safari has a different take on calculating the height
  // of flex/grid elements that contain an image with 100% height. This selector
  // identifies Safari so we can apply a maximim height that won't also apply
  // to Firefox or Blink-based browsers
  //
  // https://stackoverflow.com/questions/57516373/image-stretching-in-flexbox-in-safari
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    @content;
  }
}

@mixin ie-only {
  // IE only, use sparingly, won't need to be supported for ever
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

.clearfix {
  clear: both;
}
