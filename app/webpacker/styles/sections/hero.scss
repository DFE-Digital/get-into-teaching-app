// layout, mobile-first
$mobile-cutoff: 800px;

// fallback styles (IE)
.hero {
  &__title {
    display: block;
    max-width: 90%;

    @media only screen and (min-width: $mobile-cutoff) {
      display: inline-block;
      width: 45%;
    }

    // undo
    @supports (display: grid) {
      display: block;
      width: initial;
      max-width: initial;
    }

  }

  &__subtitle {
    display: block;
    width: 90%;
    margin: 0 2em 4em 1em;

    @media only screen and (min-width: $mobile-cutoff) {
      display: inline-block;
      max-width: 45%;
    }

    // undo
    @supports (display: grid) {
      display: block;
      max-width: initial;
      margin: initial;
      width: initial;
    }
  }

  &__img {
    float: right;
    max-width: 50%;
    display: none;

    @media only screen and (min-width: $mobile-cutoff) {
      display: block;
    }

    // undo
    @supports (display: grid) {
      float: none;
      max-width: initial;
      display: block;
    }
  }
}

// grid-specific
.hero {
  @supports (display: grid) {
    display: grid;

    grid-template-columns: 3em repeat(3, 1fr);
    grid-template-rows: repeat(4, minmax(1em, max-content));

    &__title {
      grid-area: 2 / 1 / 4 / 4;
      align-self: end;
    }

    &__subtitle,
    &__content { grid-area: 4 / 1 / 5 / 4; }

    &__subtitle {
      align-items: center;
      margin: 0 auto 2em 1.5em;

      @media only screen and (min-width: $mobile-cutoff) {
        margin: 1em 2em .5em 2em;
      }
    }

    &__img {
      min-height: 10em;
      grid-area: 1 / 2 / 3 / 5;
    }

    @media only screen and (min-width: $mobile-cutoff) {
      grid-template-columns: repeat(8, minmax(100px, 1fr));
      grid-template-rows: 2em repeat(5, minmax(5px, max-content)) 2em;

      &__title { grid-area: 3 / 1 / 5 / 5; }

      &__subtitle,
      &__content { grid-area: 5 / 1 / 7 / 4; }

      &__img {
        grid-area: 2 / 4 / 8 / 9;
      }
    }
  }
}

// styles
.hero {
  background-color: $grey;
  overflow: hidden;

  &__title,
  &__subtitle {
    > * {
      @include rotated-block;
    }
  }

  &__title {
    z-index: 20;

    h1 {
      background-color: $yellow-dark-90;
      padding: .8em 2em 1.2em;
      margin-left: -1em;

      @media only screen and (min-width: $mobile-cutoff) {
        margin-top: 2em;
      }

      > span {
        font-size: 2rem;
        border-bottom: 3px solid $black;

        &:after { content: "."; }

        @media only screen and (min-width: $mobile-cutoff) {
          font-size: 4rem;
          border-bottom: 5px solid $black;
        }
      }
    }
  }

  &__subtitle {

    div {
      font-size: 1.4rem;
      font-weight: 700;

      @media only screen and (min-width: $mobile-cutoff) {
        font-size: 2rem;
        font-weight: 700;
      }
    }
  }

  &__content {
    background-color: lightblue;
  }

  &__img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: center;

    // Hack for Safari: Safari has a different take on calculating the height
    // of flex/grid elements that contain an image with 100% height. This selector
    // identifies Safari so we can apply a maximim height that won't also apply
    // to Firefox or Blink-based browsers
    //
    // https://stackoverflow.com/questions/57516373/image-stretching-in-flexbox-in-safari
    @supports (-webkit-appearance: none) and (stroke-color: transparent) {
      max-height: 30em;
    }
  }
}

.hero__mailing-strip {

  display: flex;
  align-items: center;
  background-color: $green;
  margin-top: 50px;

  @media only screen and (max-width: $mobile-cutoff) {
    flex-direction: column;
    align-items: flex-start;
    margin: 0 -20px;
    margin-top: 30px;
  }

  &__text {
    flex-grow: 1;
    color: $white;
    font-weight: bold;
    margin-left: 1em;
    text-align: left;
    padding-right: 150px;

    @media only screen and (max-width: $mobile-cutoff) {
      padding-right: 20px;
    }
  }

  &__cta {
    margin: 0.4em 1em 20px;

    &__button {
      @include button($bg: $white, $fg: $black);
      @include chevron($color: $black);
      padding: 0.4em 1em;

      @media only screen and (max-width: $mobile-cutoff) {
        padding: .2em .5em;
      }
    }
  }
}
