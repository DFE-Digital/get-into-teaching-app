.subject-specific {
  header {
    // the two ratios don't overlap exactly because we'd get a jagged
    // edge - instead adjust the second slightly so it blurs smoothly

    @mixin slanted-bottom($accent) {
      $accent-ratio: 75%;
      $white-ratio: $accent_ratio + 0.5%;
      background: linear-gradient(182deg, $accent $accent-ratio, $white $white-ratio);
    }

    min-height: 15em;

    .container {
      max-width: 65ch;
      margin-top: 0;
      flex-direction: column;
      align-items: center;
      padding-block: 1em;

      @include mq($from: mobile) {
        flex-direction: row;
      }
    }

    &.yellow {
      @include slanted-bottom($yellow);

      background-color: $yellow;
      color: $black;

      h1 > span {
        background: $purple;
      }
    }

    &.blue {
      @include slanted-bottom($blue);

      background-color: $blue;
      color: $black;

      h1 > span {
        background: $pink;
      }
    }

    &.pink {
      @include slanted-bottom($pink);

      background-color: $pink;
      color: $black;

      h1 > span {
        background: $yellow;
      }
    }

    h1 {
      flex: 1 0 60%;
      margin: 1em auto;

      @include mq($from: tablet) {
        margin: 1em inherit;
      }

      span {
        @include font-size(xlarge);

        padding: .05rem .7rem;
      }

      span:last-of-type {
        @include font-size(xxxlarge);
      }
    }

    picture {
      flex: 0 1 40%;

      img {
        max-width: 90%;

        @include mq($from: tablet) {
          max-width: 90%;
        }
      }
    }
  }

  article {
    margin-inline: 1em;

    > * {
      max-width: 65ch;
      margin: auto;
    }

    > section {
      padding-inline: 1rem;
    }

    > section + section {
      margin-top: 3em;
    }

    @include mq($from: tablet) {
      margin: auto;
    }

    $colours: ("pink": $pink, "blue": $blue, "yellow": $yellow, "purple": $purple);

    @each $name, $val in $colours {
      .#{$name} {
        padding: 1rem .7rem;
        background: $val;
        display: inline-block;

        p {
          margin-block: 0;
        }

        @include mq($from: tablet) {
          max-width: 50%;
        }
      }

      .#{$name} + .#{$name} {
        margin-top: .5rem;
      }
    }

    $sizes: "xlarge", "xxlarge", "xxxlarge";

    @each $name in $sizes {
      .#{$name} {
        @include font-size($name);
        padding-block: .5rem;
      }
    }

    .bold {
      font-weight: bold;
    }
  }

  .statement {
    h2 {
      margin: 0;
    }

    div + div {
      margin-top: .5rem;
    }

    p + p {
      margin-top: .5rem;
    }
  }

  .text-block-with-two-images {
    display: grid;
    max-width: 70em;

    @include mq($from: tablet) {
      grid-template-columns: repeat(2, 1fr) repeat(2, .8fr) 1fr;
      grid-template-rows: repeat(2, .5fr) .2fr repeat(2, .5fr);
    }

    .statement {
      z-index: 20;

      * {
        max-width: unset;
      }

      @include mq($from: tablet) {
        grid-area: 1 / 3 / 4 / 5;
      }
    }

    picture {
      img {
        max-width: 100%;
      }
    }

    picture:nth-of-type(1) {
      transform: rotate(-3deg);

      @include mq($from: tablet) {
        grid-area: 2 / 1 / 5 / 4;
      }
    }

    picture:nth-of-type(2) {
      transform: rotate(5deg);

      @include mq($from: tablet) {
        grid-area: 3 / 3 / 5 / 6;
      }
    }
  }
}
