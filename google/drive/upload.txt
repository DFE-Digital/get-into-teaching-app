function myFunction() {
  var drives = Drive.Drives.list();
  drives.items.map(drive => {
    Logger.log(`${drive.name} - ${drive.id}`);
    var folder = DriveApp.getFolderById(drive.id);
    var folders= folder.getFolders();
    while (folders.hasNext()) {
     var folder = folders.next();
     Logger.log(`${folder.getId()} - ${folder.getName()}`);
     uploadImagesToAzureStorage(folder.getName(), folder.getId());
    }
  });
}

function uploadImagesToAzureStorage( imagesSubFolder, imagesFolderId){
  let imagesFolder = DriveApp.getFolderById(imagesFolderId);
  let dateNow = new Date();
  let files = imagesFolder.getFiles();
  while(files.hasNext()){
    let file = files.next();
    Logger.log(`${file.getId()} - ${file.getName()} - ${file.getUrl()}`);
    let age =  dateNow - file.getLastUpdated();
    let newage = dateNow - 3600;
    Logger.log( `Now ${dateNow}, Last Updated ${file.getLastUpdated()}, Age is ${age}, Check is ${newage}`)
    let blob = file.getBlob();
    let contentType = blob.getContentType();
    let options = {
     'method' : 'PUT',
     'payload' : blob.getAs(contentType),
      contentType: contentType,
      headers: {
        'x-ms-blob-cache-control' : 'public, max-age=3600', 
        'x-ms-version'  : '2020-02-10',
        'x-ms-date': (new Date()).toUTCString(),
        'Content-Type': contentType,
        'x-ms-blob-content-type': contentType,
        'x-ms-blob-type': 'BlockBlob'
      }
    };
    let azureStorageUrl =`https://s146p01gitiscontent.blob.core.windows.net/content/${imagesSubFolder}/${file.getName()}?sp=racwdl&st=2021-03-01T13:59:29Z&se=2022-03-01T21:59:29Z&spr=https&sv=2020-02-10&sr=c&sig=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`
    let response = UrlFetchApp.fetch(azureStorageUrl, options);
    Logger.log(response.getContentText());
  }
}
